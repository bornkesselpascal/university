public class Luhn {

	private String cardnumber;
	
	public Luhn(String pCardnumber) {
		cardnumber = pCardnumber;
	}
	
	public boolean check(int anz) {
		boolean noLetters = true;
		boolean DupCalc = false;
		
		int digCount = 0;
		int valCount = 0;
		int i = cardnumber.length()-1;

		while(i>=0 && noLetters) {
			char current = cardnumber.charAt(i);
			
			if(Character.isDigit(current)) {
				// Fall: Nummer
				
				digCount++;
				int value = Character.digit(current, 10);
				
				if(DupCalc) {
					
					int dupValue = 2 * value;
					
					if (dupValue > 9) {
						 
				        int quer, rest;
				        quer = 0;
				        while (dupValue > 0) {
				            rest = dupValue % 10;
				            quer = quer + rest;
				            dupValue = dupValue / 10;
				        }

				        dupValue = quer;
						
					}
					
					valCount = valCount + dupValue;
					DupCalc = false;
				}
				else {
					valCount = valCount + value;
					DupCalc = true;
				}				
			}
			else if (current == ' ') {
				// Fall: Leerzeichen
			}
			else {
				System.out.println("Diese Kartennummer enth�lt ung�ltige Zeichen.");
				return false;
			}
			
			i--;
		}
		
		if (anz != digCount) {
			System.out.println("Diese Kartennummer ist zu kurz.");
			return false;
		}
		
		if (valCount % 10 == 0) {
			return true;
		}
		else {
			System.out.println("Diese Kartennummer ist ung�ltig.");
			return false;
		}

	}
	
}
